/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/did_screen/DIDViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

DIDViewBase::DIDViewBase() :
    buttonCallback(this, &DIDViewBase::buttonCallbackHandler)
{
    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 255, 255));

    buttonWithReturn.setXY(53, 348);
    buttonWithReturn.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_SMALL_PRESSED_ID));
    buttonWithReturn.setLabelText(TypedText(T_SINGLEUSEID4));
    buttonWithReturn.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithReturn.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithReturn.setAction(buttonCallback);

    buttonWithRead.setXY(48, 91);
    buttonWithRead.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithRead.setLabelText(TypedText(T_SINGLEUSEID9));
    buttonWithRead.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithRead.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithRead.setAction(buttonCallback);

    buttonWithClear.setXY(48, 216);
    buttonWithClear.setBitmaps(Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
    buttonWithClear.setLabelText(TypedText(T_SINGLEUSEID10));
    buttonWithClear.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithClear.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    buttonWithClear.setAction(buttonCallback);

    box2.setPosition(248, 79, 515, 334);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));

    textHWVersion.setPosition(248, 79, 488, 29);
    textHWVersion.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textHWVersion.setLinespacing(0);
    textHWVersionBuffer[0] = 0;
    textHWVersion.setWildcard(textHWVersionBuffer);
    textHWVersion.setTypedText(TypedText(T_SINGLEUSEID16));

    textSWVersion.setPosition(248, 108, 488, 26);
    textSWVersion.setColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    textSWVersion.setLinespacing(0);
    textSWVersionBuffer[0] = 0;
    textSWVersion.setWildcard(textSWVersionBuffer);
    textSWVersion.setTypedText(TypedText(T_SINGLEUSEID15));

    add(box1);
    add(buttonWithReturn);
    add(buttonWithRead);
    add(buttonWithClear);
    add(box2);
    add(textHWVersion);
    add(textSWVersion);
}

void DIDViewBase::setupScreen()
{

}

void DIDViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonWithReturn)
    {
        //Interaction1
        //When buttonWithReturn clicked change screen to HOME
        //Go to HOME with no screen transition
        application().gotoHOMEScreenNoTransition();
    }
    else if (&src == &buttonWithRead)
    {
        //ButtonToRead
        //When buttonWithRead clicked call virtual function
        //Call ReadDIDClicked
        ReadDIDClicked();
    }
    else if (&src == &buttonWithClear)
    {
        //ButtonToClearDID
        //When buttonWithClear clicked call virtual function
        //Call ClearDIDClicked
        ClearDIDClicked();
    }
}
